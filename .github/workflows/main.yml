# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  [push, pull_request, workflow_dispatch]
  # Triggers the workflow on push or pull request events but only for the main branch
  # Allows you to run this workflow manually from the Actions tab

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ### COMPILING JAVA FILES #######
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: compile all java files
        run: |
          cd Projects/P3
          java -version
          javac -version 
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java

  test-PM-get_valid_moves:
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: TestPacMan get_valid_moves
        run: |
          cd Projects/P3
          java -version
          javac -version 
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -Djava.awt.headless=true -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestPacManValidMoves

  test-GH-get_valid_moves:
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: TestGhost get_valid_moves
        run: |
          cd Projects/P3
          java -version
          javac -version 
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -Djava.awt.headless=true -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestGhostValidMoves

  test-Map-move:
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: TestMap move
        run: |
          cd Projects/P3
          java -version
          javac -version 
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -Djava.awt.headless=true -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapMove

  test-PM-move:
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: TestPacMan move
        run: |
          cd Projects/P3
          java -version
          javac -version 
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -Djava.awt.headless=true -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestPacManMove

  test-GH-move:
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: TestGhost move
        run: |
          cd Projects/P3
          java -version
          javac -version 
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -Djava.awt.headless=true -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestGhostMove

  test-Map-getLoc:
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: TestMap getLoc
        run: |
          cd Projects/P3
          java -version
          javac -version 
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -Djava.awt.headless=true -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapGetLoc

  test-PM-is_ghost_in_range:
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: TestPacMan is_ghost_in_range
        run: |
          cd Projects/P3
          java -version
          javac -version 
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -Djava.awt.headless=true -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestGhostInRange

  test-GH-is_pacman_in_range:
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: TestPacMan is_pacman_in_range
        run: |
          cd Projects/P3
          java -version
          javac -version 
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -Djava.awt.headless=true -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestPacManInRange

  test-Map-attack:
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: TestPacMan attack
        run: |
          cd Projects/P3
          java -version
          javac -version 
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -Djava.awt.headless=true -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapAttack

  test-PM-consume:
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: TestPacMan consume
        run: |
          cd Projects/P3
          java -version
          javac -version 
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -Djava.awt.headless=true -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestConsume

  test-Map-eatCookie:
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: TestMap eatCookie
        run: |
          cd Projects/P3
          java -version
          javac -version 
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -Djava.awt.headless=true -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapEatCookie

  test-GH-attack:
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: TestGhost attack
        run: |
          cd Projects/P3
          java -version
          javac -version 
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -Djava.awt.headless=true -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestAttack